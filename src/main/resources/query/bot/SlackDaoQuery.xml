<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.honsul.inthewood.bot.slack.dao.SlackDao">
                      
    <update id="updateSlackUser" parameterType="SlackUser">
      INSERT INTO SLACK_USER(
        USER_ID, USER_NAME, TEAM_ID, TEAM_NAME, ACCESS_TOKEN, 
        BOT_USER_ID, BOT_ACCESS_TOKEN, BOT_IM_CHANNEL, INSERT_DT, UPDATE_DT)
      VALUES (
        #{userId}, #{userName}, #{teamId}, #{teamName}, #{accessToken}, 
        #{botUserId}, #{botAccessToken}, #{botImChannel}, now(), now())
          ON DUPLICATE KEY
      UPDATE USER_NAME = #{userName}
           , TEAM_ID = #{teamId}
           , TEAM_NAME = #{teamName}
           , ACCESS_TOKEN = #{accessToken}
           , BOT_USER_ID = #{botUserId}
           , BOT_ACCESS_TOKEN = #{botAccessToken}
           , BOT_IM_CHANNEL = #{botImChannel}
           , UPDATE_DT = now()    
    </update>    
    
    <select id="getSlackBotAcccessTokenByUserId" resultType="string" parameterType="string">
      SELECT BOT_ACCESS_TOKEN
        FROM SLACK_USER
       WHERE USER_ID = #{vo}
    </select>

    <select id="getSlackUserAcccessTokenByUserId" resultType="string" parameterType="string">
      SELECT ACCESS_TOKEN
        FROM SLACK_USER
       WHERE USER_ID = #{vo}
    </select>

    <select id="selectSlackSubscription" resultType="SlackSubscription" parameterType="SlackSlashCommand">
      SELECT a.USER_ID
           , b.USER_NAME
          , a.SUBSCRIPTION_ID
          , a.RESORT_ID
          , CASE WHEN a.RESORT_ID = '*' 
                 THEN CONCAT('전국 ', (SELECT COUNT(distinct RESORT_ID) FROM BOOKING), '개 휴양림') 
              ELSE c.RESORT_NM 
            END as RESORT_NM
          , c.HOMEPAGE
          , c.ADDRESS
          , CASE WHEN a.BOOKING_DT = 'holiday'
                 THEN '주말과 연휴'
                 ELSE a.BOOKING_DT
              END as BOOKING_DT
          , a.*
        FROM SLACK_SUBSCRIBER a
        JOIN SLACK_USER b
          ON b.USER_ID = a.USER_ID
        LEFT JOIN RESORT c
          ON c.RESORT_ID = a.RESORT_ID
       WHERE a.USER_ID = #{userId}
         AND a.CHANNEL = #{channelId}
       ORDER BY a.SUBSCRIPTION_ID
    </select>
    
    <select id="getBookingResortCount" resultType="int" parameterType="string">
      SELECT COUNT(distinct RESORT_ID) FROM BOOKING
    </select>    
    
    <select id="selectResortOptionList" resultType="cmap" parameterType="string">
      SELECT CASE WHEN ROW_NUMBER() OVER (PARTITION BY a.REGION ORDER BY a.RESORT_NM) = 1 THEN 'Y' ELSE 'N' END as GROUP_YN
         , a.REGION
           , a.RESORT_ID
           , a.RESORT_NM
        FROM RESORT a
       WHERE EXISTS (SELECT 1 FROM BOOKING WHERE RESORT_ID = a.RESORT_ID)
      <if test="vo!= null and !vo.equals('')">
         AND a.RESORT_NM LIKE CONCAT('%', #{vo}, '%')
      </if>
       ORDER BY a.REGION, a.RESORT_NM
    </select>    
    
    <select id="getSubscribeBookingDt" resultType="cmap" parameterType="string">
      SELECT DATE_FORMAT(a.DT, '%Y-%m-%d') as BOOKING_DT
           , CONCAT(DATE_FORMAT(a.DT, '%Y년 %m월 %d일'), ' ', 
               CASE DATE_FORMAT(a.DT, '%w') 
                    WHEN 0 THEN '일요일' 
                    WHEN 1 THEN '월요일' 
                    WHEN 2 THEN '화요일' 
                    WHEN 3 THEN '수요일' 
                    WHEN 4 THEN '목요일' 
                    WHEN 5 THEN '금요일' 
                    WHEN 6 THEN '토요일' 
                END) as BOOKING_DT_TXT
        FROM CALENDAR a
       WHERE DT = STR_TO_DATE(RPAD(LEFT(#{vo}, 8), 8, '0'), '%Y%m%d')
    </select>        

</mapper>

