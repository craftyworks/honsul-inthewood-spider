<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.honsul.inthewood.bot.slack.dao.SlackDao">
                      
    <update id="updateSlackUser" parameterType="SlackUser">
      INSERT INTO SLACK_USER(
        USER_ID, USER_NAME, TEAM_ID, TEAM_NAME, ACCESS_TOKEN, 
        BOT_USER_ID, BOT_ACCESS_TOKEN, BOT_IM_CHANNEL, INSERT_DT, UPDATE_DT)
      VALUES (
        #{userId}, #{userName}, #{teamId}, #{teamName}, #{accessToken}, 
        #{botUserId}, #{botAccessToken}, #{botImChannel}, now(), now())
          ON DUPLICATE KEY
      UPDATE USER_NAME = #{userName}
           , TEAM_ID = #{teamId}
           , TEAM_NAME = #{teamName}
           , ACCESS_TOKEN = #{accessToken}
           , BOT_USER_ID = #{botUserId}
           , BOT_ACCESS_TOKEN = #{botAccessToken}
           , BOT_IM_CHANNEL = #{botImChannel}
           , UPDATE_DT = now()    
    </update>    
    
    <select id="getSlackBotAcccessTokenByUserId" resultType="string" parameterType="string">
      SELECT BOT_ACCESS_TOKEN
        FROM SLACK_USER
       WHERE USER_ID = #{vo}
    </select>

    <select id="getSlackUserAcccessTokenByUserId" resultType="string" parameterType="string">
      SELECT ACCESS_TOKEN
        FROM SLACK_USER
       WHERE USER_ID = #{vo}
    </select>

    <select id="selectSlackSubscription" resultType="SlackSubscription" parameterType="map">
      SELECT a.SUBSCRIPTION_ID
           , a.USER_ID
           , b.USER_NAME
           , a.CHANNEL
           , a.BOOKING_DT
           , CASE WHEN a.BOOKING_DT = 'holiday'
                 THEN '주말과 연휴'
                 ELSE CONCAT(DATE_FORMAT(d.DT, '%Y년 %m월 %d일'), ' ', d.DAY_KR_NM)
              END as BOOKING_DT_TXT
           , a.RESORT_ID
           , CASE WHEN a.RESORT_ID = '*' 
                 THEN CONCAT('전국 ', (SELECT COUNT(distinct RESORT_ID) FROM BOOKING), '개 휴양림') 
              ELSE c.RESORT_NM 
            END as RESORT_NM
           , c.HOMEPAGE
           , c.ADDRESS
           , a.ROOM_TYPE
        FROM SLACK_SUBSCRIBER a
        JOIN SLACK_USER b
          ON b.USER_ID = a.USER_ID
        LEFT JOIN RESORT c
          ON c.RESORT_ID = a.RESORT_ID
        LEFt JOIN CALENDAR d
          ON d.DT = STR_TO_DATE(a.BOOKING_DT, '%Y%m%d')
       WHERE a.USER_ID = #{userId}
         AND a.CHANNEL = #{channelId}
       ORDER BY a.SUBSCRIPTION_ID
    </select>
    
    <select id="getSlackSubscription" resultType="SlackSubscription" parameterType="SlackSubscription">
      SELECT a.SUBSCRIPTION_ID
           , a.USER_ID
           , b.USER_NAME
           , a.CHANNEL
           , a.BOOKING_DT
           , CASE WHEN a.BOOKING_DT = 'holiday'
                 THEN '주말과 연휴'
                 ELSE CONCAT(DATE_FORMAT(d.DT, '%Y년 %m월 %d일'), ' ', d.DAY_KR_NM)
              END as BOOKING_DT_TXT
           , a.RESORT_ID
           , CASE WHEN a.RESORT_ID = '*' 
                 THEN CONCAT('전국 ', (SELECT COUNT(distinct RESORT_ID) FROM BOOKING), '개 휴양림') 
              ELSE c.RESORT_NM 
            END as RESORT_NM
           , c.HOMEPAGE
           , c.ADDRESS
           , a.ROOM_TYPE
        FROM SLACK_SUBSCRIBER a
        JOIN SLACK_USER b
          ON b.USER_ID = a.USER_ID
        LEFT JOIN RESORT c
          ON c.RESORT_ID = a.RESORT_ID
        LEFt JOIN CALENDAR d
          ON d.DT = STR_TO_DATE(a.BOOKING_DT, '%Y%m%d')
      <choose>
        <when test="subscriptionId and subscriptionId != ''">
       WHERE a.SUBSCRIPTION_ID = #{subscriptionId}
        </when>
        <otherwise>
       WHERE a.USER_ID = #{userId}
         AND a.CHANNEL = #{channel}
         AND a.BOOKING_DT = #{bookingDt}
         AND a.RESORT_ID = #{resortId}
         AND a.ROOM_TYPE = #{roomType}
        </otherwise>
      </choose>          
    </select>
        
    <select id="getBookingResortCount" resultType="int" parameterType="string">
      SELECT COUNT(distinct RESORT_ID) FROM BOOKING
    </select>    
    
    <select id="selectResortOptionList" resultType="cmap" parameterType="string">
      SELECT CASE WHEN ROW_NUMBER() OVER (PARTITION BY a.REGION ORDER BY a.RESORT_NM) = 1 THEN 'Y' ELSE 'N' END as GROUP_YN
           , a.REGION
           , a.RESORT_ID
           , a.RESORT_NM
        FROM RESORT a
       WHERE EXISTS (SELECT 1 FROM BOOKING WHERE RESORT_ID = a.RESORT_ID)
         AND a.RESORT_NM LIKE CONCAT('%', ifnull(#{vo}, ''), '%')
       ORDER BY a.REGION, a.RESORT_NM
    </select>    
    
    <select id="getSubscribeBookingDt" resultType="cmap" parameterType="string">
      SELECT DATE_FORMAT(a.DT, '%Y%m%d') as BOOKING_DT
           , CONCAT(DATE_FORMAT(a.DT, '%Y년 %m월 %d일'), ' ', a.DAY_KR_NM) as BOOKING_DT_TXT
        FROM CALENDAR a
       WHERE DT = STR_TO_DATE(RPAD(LEFT(ifnull(#{vo}, ''), 8), 8, '0'), '%Y%m%d')
    </select>

    <select id="selectComingWeekendBookingDt" resultType="cmap" parameterType="string">
      SELECT 'holiday' as BOOKING_DT
           , '주말과 연휴' as BOOKING_DT_TXT
       UNION ALL     
      SELECT DATE_FORMAT(a.DT, '%Y%m%d') as BOOKING_DT
           , CONCAT(DATE_FORMAT(a.DT, '%Y년 %m월 %d일'), ' ', a.DAY_KR_NM) as BOOKING_DT_TXT
        FROM CALENDAR a
       WHERE a.DT &gt; now()
         AND a.HOLIDAY_YN = 'Y'
         AND (SELECT COUNT(*)
                FROM CALENDAR 
               WHERE DT BETWEEN now() and a.DT
              AND HOLIDAY_YN = 'Y') &lt;= 3
    </select>  
    
    <insert id="insertNewSubscription" parameterType="SlackSubscription">
      INSERT INTO SLACK_SUBSCRIBER(
         USER_ID, CHANNEL, BOOKING_DT, RESORT_ID, ROOM_TYPE, USE_YN)
      VALUES (
        #{userId}, #{channel}, #{bookingDt}, #{resortId}, #{roomType}, 'Y'
      )
    </insert>   
    
    <update id="updateSubscription" parameterType="SlackSubscription">
      UPDATE SLACK_SUBSCRIBER
         SET BOOKING_DT = #{bookingDt}
           , RESORT_ID = #{resortId}
           , ROOM_TYPE = #{roomType}
           , UPDATE_DT = now()
       WHERE SUBSCRIPTION_ID = #{subscriptionId}    
    </update>

    <delete id="removeSubscription" parameterType="string">
      DELETE 
        FROM SLACK_SUBSCRIBER
       WHERE SUBSCRIPTION_ID = #{vo}    
    </delete>   
       
    <insert id="insertSubmissionDialogSession" parameterType="SubmissionDialogSession">
      INSERT INTO SLACK_SUBMISSION_DIALOG(
         SUBMISSION_ID, SUBSCRIPTION_ID, CALLBACK_URL
      ) VALUES (
        #{submissionId}, #{subscriptionId}, #{callbackUrl}
      )
    </insert>
    
    <select id="getSubmissionDialogSession" resultType="SubmissionDialogSession" parameterType="string"> 
      SELECT a.SUBMISSION_ID
           , a.SUBSCRIPTION_ID
           , a.CALLBACK_URL
        FROM SLACK_SUBMISSION_DIALOG a
       WHERE a.SUBMISSION_ID = #{vo}
    </select>      
    
</mapper>

